DATASET: 'CustomDataset'
DATA_PATH: '../data/custom'

# https://github.com/open-mmlab/OpenPCDet/issues/1557
# https://github.com/open-mmlab/OpenPCDet/issues/1361
# Again, you can find VOXEL_SIZE: [x axis, y axis, z axis] in custom_dataset.yaml. Let's say we follow the default [0.1, 0.1, 0.15]. Voxel size of z axis is 0.15
# If (z_max - z_max) / 0.15 = 40, then you can use any model you want. But make sure you round up z_max or round down z_min such that z_max - z_max) / 0.15 EQUALS TO 40
# If (z_max - z_max) / 0.15 > 40, then you may want to use point or pillar based detector instead of voxel based detectors ref 3.
# This is because to use voxel based detectors such as SECOND, PV-RCNN and CenterPoint), the point cloud range along z-axis / voxel_size of z axis is 40. You can ref 1 or ref 2

###### follow this!!! 
# Point cloud range along z-axis / voxel_size is 40
# Point cloud range along x&y-axis / voxel_size is the multiple of 16.

# POINT_CLOUD_RANGE: [-75.2, -75.2, -2, 75.2, 75.2, 4]
# POINT_CLOUD_RANGE: [-200, -200, -10, 200, 200, 30]
# POINT_CLOUD_RANGE: [-270.0, -254.0, -74.2, 370.0, 450.0, 125.8]
# POINT_CLOUD_RANGE: [-96.0, -96.0, -10, 96.0, 96.0, 20] # 20241127 crop old
POINT_CLOUD_RANGE: [-96.0, -96.0, -20, 96.0, 96.0, 20] # new crop
# POINT_CLOUD_RANGE: [-70.4, -70.4, -4, 70.4, 70.4, 4] # 20241126 morning

MAP_CLASS_TO_KITTI: {
    'ship': 'Car',
    'buoy': 'Pedestrian',
    'other': 'Cyclist',
}


DATA_SPLIT: {
    'train': train,
    'test': val
}

INFO_PATH: {
    'train': [custom_infos_train.pkl],
    'test': [custom_infos_val.pkl],
}

POINT_FEATURE_ENCODING: {
    encoding_type: absolute_coordinates_encoding,
    used_feature_list: ['x', 'y', 'z', 'intensity'],
    src_feature_list: ['x', 'y', 'z', 'intensity'],
}

DATA_AUGMENTOR:
    DISABLE_AUG_LIST: ['placeholder']
    DISABLE_AUG_LIST: ['random_world_flip', 'random_world_rotation', 'random_world_scaling']
    # DISABLE_AUG_LIST: ['gt_sampling', 'random_world_flip', 'random_world_rotation', 'random_world_scaling']
    AUG_CONFIG_LIST:
        - NAME: gt_sampling
          USE_ROAD_PLANE: False
          DB_INFO_PATH:
              - custom_dbinfos_train.pkl
          PREPARE: {
             filter_by_min_points: ['ship:1', 'buoy:1', 'other:1'],
          }
          # PREPARE: {
          #    filter_by_min_points: ['ship:1', 'buoy:1'],
          # }
          SAMPLE_GROUPS: ['ship:15', 'buoy:15', 'other:15'] 
          # SAMPLE_GROUPS: ['ship:15', 'buoy:15']
          NUM_POINT_FEATURES: 4
          DATABASE_WITH_FAKELIDAR: False
          REMOVE_EXTRA_WIDTH: [0.0, 0.0, 0.0]
          LIMIT_WHOLE_SCENE: True

        - NAME: random_world_flip
          ALONG_AXIS_LIST: ['x', 'y']

        - NAME: random_world_rotation
          WORLD_ROT_ANGLE: [-0.78539816, 0.78539816]

        - NAME: random_world_scaling
          WORLD_SCALE_RANGE: [0.95, 1.05]

DATA_PROCESSOR:
    - NAME: mask_points_and_boxes_outside_range
      REMOVE_OUTSIDE_BOXES: True

    - NAME: shuffle_points
      SHUFFLE_ENABLED: {
        'train': True,
        'test': False
      }

    - NAME: transform_points_to_voxels
      # VOXEL_SIZE: [0.1, 0.1, 0.15]
      # VOXEL_SIZE: [1.0, 1.0, 5.0]
      # VOXEL_SIZE: [0.176, 0.176, 0.2]
      # VOXEL_SIZE: [0.5, 0.5, 1.0]
      # VOXEL_SIZE: [0.2, 0.2, 0.75] # after CROP
      VOXEL_SIZE: [0.2, 0.2, 1.0] # after newest CROP
      MAX_POINTS_PER_VOXEL: 15 # after CROP
      MAX_NUMBER_OF_VOXELS: {
        'train': 150000,
        'test': 150000
      }